//Git is version control system that watches all changes we do in Repositories 
//GitHub is a website that host Git and its functionalities
//Git is Open Source Distributed Version Control System 

File Structure is Inverted Tree like Structure 
If we initialise git in a Folder "DummyDot" on Desktop : 
1) .  : Current Directory (DummyDot)
2) .. : Parent Directory (DeskTop)
3) .git  : Git File it's actually hidden 

# . and .. is present in every directory which means . : current directory and .. : Parent Directory

//Create A Git Repo 
Git init : Apni Directory ko Git initialise kr skte ho 
git clone : Kisi aur ki git repo ko clone krna hai

//LifeCycle of a Change 
//Steps of How Everything Works here :
Working Directory : Temporary Changes 
Staging Index : About to Commit 
Repository : Commited 

//Review a Repo History 
git log : Shows all the commit history with latest commit at the top 
git log -2 : :Latest 2 commit 
git log -3 : Lastest 3 commit
git log -p : Shows commit with the actual changes done 
git log --oneline : Shows commit in a line to see . It will show all commit id and message  
git log --stat : It shows commit with all changes done in file . 
git show [commit id] : Particular Commit id mein jo jo change hue hai wo show karta hai

//Let's Make Commit 
git add -> Add file to Track  (Staged Area m aajayegi)
git commit -m "Message" -> Commit All Changes that are in staged Area
git add . -> Krna Not Recommended Hota hai kyuki ye saari files ko staged area m daal deta hai 
git diff -> Diff of what is Changed but not staged
git restore -> Rollback to Latest Commit (Head pr)
git commit -am "TimePass" : Add aur commit Ek sath 


//Some files we Want Git Not To Track 
Files like .docx , .rtf 
File Bnao .gitignore aur uske andr likhdo : .docx , .rtf , File ka path bhi daal skte hai , .gitignore same file bhi dal skte hai 

//Branching Tagging and Merging 
git tag  : Tag a Specific Commit (Beta Release )
git tag -a betaV1 [commit id] -m "My Beta Release"
git tag -d betaV1 : Remove a Beta Tag 
git branch 
git stash : Takes your Uncommited Changes(Staged and Unstaged),saves them away for later use 
git checkout 
git merge [branch name] : Merge Branch with master 
git branch -d [branch name] : delete a Branch 

If Merge conflicts occur : AutoMerge Fails here 
Ya to dono ko merge krro ya fir Abort kroo 

//Undo Commit 
git commit --amend : Amend the most recent commit message  
git revert  : revert given commit  but history m show hoga 
git reset : Delete commit (Dangerous Commit)
git reset --soft  : Diff will show as staged
git reset --mixed : Working Directory m changes hai wo intact rhenge 
git reset --hard : Local Changes bhi discard ho jayenge 